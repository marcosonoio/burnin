#!/usr/bin/env bash

# progress bar https://github.com/fearside/ProgressBar/blob/master/progressbar.sh
function ProgressBar {
        local progress="${1}"
# Process data
	let _done=${1}*4/10
	let _left=50-$_done
# Build progressbar string lengths
	_done=$(printf "%${_done}s")
	_left=$(printf "%${_left}s")

# 1.2 Build progressbar strings and print the ProgressBar line
# 1.2.1 Output example:
# 1.2.1.1 Progress : [########################################] 100%
printf "\rProgress : [${_done// /#}${_left// /-}] ${progress[1]}%% - Run: ${progress[2]}\\n"

}

# set physical connection of the motherboard to control
conn=(ata1 ata2 ata3 ata4 ata5 ata6)

while :
do
    printf "\033c"
    echo
    echo "Burnin HDD control"
    echo
    i=1
    for sata in ${conn[*]}
    do
        dev[$i]=$(lsscsi -v | grep -B 1 "${sata}" | head -1 | awk 'NF>1{print $NF}' | cut -d "/" -f 3)
        if [ -n "${dev[${i}]}" ]; then
	    since=$(systemctl status burnin@"${dev[$i]}".service | grep "active (running)" | cut -d ")" -f 2 | sed -e 's/^[ \t]*//')
            if [ -n "${since}" ] ; then
              sn=$(smartctl -i /dev/"${dev[$i]}" | grep "Serial Number" | cut -d ":" -f 2 | sed -e 's/^[ \t]*//')
              echo "#${i} /dev/${dev[$i]} - ${sn} is running ${since}"
              pid[$i]=$(systemctl status burnin@"${dev[$i]}".service | grep "Main PID" | awk '{print $3}')
              log[$i]=$(journalctl -u  burnin@"${dev[$i]}".service  _PID="${pid[$i]}" -e -o json | jq -M -r '. | {time: .__REALTIME_TIMESTAMP, msg: .MESSAGE}')
              progress=($(jq -M -r 'select(.msg | contains("%progess%") ) | "\(.msg)"' <<< "${log[$i]}" | tail -1))
              ProgressBar "${progress[@]}"
	      echo
            fi
        else
            echo "#${i} empty or finished"
	    echo
        fi
        i=$((i+1))
    done
    echo
    read -r -t 10 -p $'Press Enter to refresh, or insert the number of the the device to show the log: ' num
    case $num in
      1|2|3|4|5|6)
        if [ -n "${dev[$num]}" ]; then
          printf "\033c"
	  jq -M -r 'select(.msg | contains("%progess%" | not ) ) | "\(.time | tonumber / 1000000) \(.msg)"' <<< "${log[$num]}" | awk '{ $1=strftime("%b %d %T", $1); print $0; fflush(); }' | less +G
        fi
        ;;
     "1stop"|"2stop"|"3stop"|"4stop"|"5stop"|"6stop")
     	if [ -n "${dev[$num]}" ]; then
	  printf "\033c"
	  if ( systemctl stop burnin@"${dev[${num:0:1}]}".service ); then
	     echo
	     echo "STOPPED!!!"
	  else
	     echo
	     echo "Some problem to STOP"
	  fi
	fi
	echo
	echo
	read -p 'Press Enter to continue'
	;;
      "quit")
         exit
       ;;
    esac
done
