#!/usr/bin/env bash

while :
do
  printf "\033c"
  process=($(systemctl list-units --all --state=active | grep burnin | grep running | awk '{print $1}'))
  if [ ${#process[@]} -eq 0 ]; then
    echo "No running test"
    echo
    read -rsp $'Press enter to refresh...\n'
  else
    i=0
    for service in ${process[*]}
    do
      echo
      echo "Burnin HDD control"
      echo
      device[$i]="/dev/"$(echo  "$service" | sed 's/.*@\(.*\)\..*/\1/')
      sn=$(smartctl -i "${device[$i]}" | grep "Serial Number" | cut -d ":" -f 2 | sed -e 's/^[ \t]*//')
      since=$(systemctl status "$service" | grep "active (running)" | cut -d ")" -f 2 | sed -e 's/^[ \t]*//')
      echo "#$i ${device[i]} - ${sn} is running ${since}"
      pid[$i]=$(systemctl status "$service" | grep "Main PID" | awk '{print $3}')
      i=$((i+1))
    done
    echo
    echo "Press Enter to refresh, or insert the number of the the device to show the log [1-6]: " 
    read -t 10 -r num
    if [ "$i" -gt "$num" ] && [ "$num" -ge 0 ]; then
      printf "\033c"
      journalctl _PID="${pid[$num]}" -e -o json | jq -M -r '"\(.__REALTIME_TIMESTAMP | tonumber / 1000000) \(.MESSAGE)"' | awk '{ $1=strftime("%b %d %T", $1); print $0; fflush(); }' | less
      read -rsp $'Press enter to continue...\n'
    fi
  fi
done
